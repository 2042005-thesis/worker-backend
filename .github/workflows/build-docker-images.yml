# Maintainers: taufiqpsumarna@gmail.com
# Version: 2.1
# Date: 2025-05-22

name: CI/CD Pipeline for Docker Images and Compose Files

on:
  push:
    branches:
    - main
    - staging
    - dev*
    tags: [ v* ]
  pull_request:

jobs:
  gitguardian-scan:
    name: üîë GitGuardian secrets scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1
        with:
          args: -v --with-incident-details
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.ref_name }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  trivy-scan-fs:
    name: üõ°Ô∏è Scan Repository for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log Branch and Tag Info
        run: |
          echo "Running vulnerability scan on: $GITHUB_REF"

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scanners: 'vuln,secret'
          ignore-unfixed: true
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: 1

  build-scan-push:
    name: üê≥ Build, Scan & Push Docker Image
    runs-on: ubuntu-latest
    needs: 
      - trivy-scan-fs
      - gitguardian-scan
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Docker Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKER_REPO_NAME }}
          tags: |
             type=sha,format=short,enable=${{ github.ref == 'refs/heads/staging' && 'true' || 'false' }}
             type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') && 'true' || 'false' }}
          flavor: |
            latest=false
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check

      - name: Build docker without push to registry
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          load: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'image'
          image-ref: '${{ steps.metadata.outputs.tags }}'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: 1

      - name: Push docker images to registry
        uses: docker/build-push-action@v6
        env:
            DOCKER_BUILD_SUMMARY: false
        with:
          push: true
          load: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  update-docker-compose:
    name: üìù Update Docker Compose Files
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build-scan-push
    env:
      IMAGE_NAME: ${{ vars.DOCKER_REPO_NAME }}
      DEPLOYMENT_REPO: ${{ vars.DEPLOYMET_REPO }}
      DEPLOYMENT_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
      DEPLOYMENT_APP_PATH: ${{ vars.DEPLOYMENT_APP_PATH }}
      DEPLOYMENT_REPOSITORY: ${{ vars.DEPLOYMENT_REPOSITORY }}
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate Docker Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKER_REPO_NAME }}
          tags: |
             type=sha,format=short,enable=${{ github.ref == 'refs/heads/staging' && 'true' || 'false' }}
             type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') && 'true' || 'false' }}
          flavor: |
            latest=false

      - name: Update docker-compose.yml, Commit and Push Changes
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - run: .github/scripts/update-compose.sh

      - name: Log Branch and Tag Info
        run: |
          echo "Running on branch/tag: $GITHUB_REF"
          echo "Docker image tags: ${{ steps.metadata.outputs.tags }}"
